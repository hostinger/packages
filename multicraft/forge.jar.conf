## To create a custom config for a mod create a file with the same name
## as the jar file and append ".conf", for craftbukkit this would be
## "craftbukkit.jar.conf".
## The following config is an example that lists all possible options,
## without actually changing anything (it remaps the commands on
## themselves).
##
## For using custom JARs in general please see:
## http://www.multicraft.org/site/docs?view=howto#9
## And for customizing .jar.conf files:
## http://www.multicraft.org/site/docs?view=conf
##
## General configuration. If this contains a setting called "file" the
## [commands], [start] and [parse_*] sections will be loaded from this
## other file
[config]
## The name as displayed in the panel, leave empty to hide
name = Forge
## Where to download the JAR file from
source = https://github.com/merkys7/misc/raw/master/forge.jar
## Where to download this file from (will overwrite this file with the
## downloaded one)
configSource = https://raw.githubusercontent.com/merkys7/misc/master/forge.jar.conf
## Sections of this file that may be overridden by .conf files in the server
## directory
#safeConfSections = ^(encoding|commands|parse_.+)$
## A list of servers that are allowed to use this server executable, separated
## by commas:
## servers = 1,2,5,6
## If the list is empty, all servers are allowed.
## Alternatively you can start the list with *, meaning all servers and then
## exclude individual servers using !X, where X is the server ID, for example:
## servers = *,!2,!3
#servers =
## A list of daemons that are allowed to use this server executable. The format
## is the same as for the "servers" setting above.
#daemons =
## The category to list this executable in
category = Mods

## Encoding used for strings sent to and received from the server
[encoding]
## The encoding to use to send data to the Minecraft process
## Use "system" for your current locale.
## default: system on Linux, latin-1 on Windows
#encode = system
## The encoding to use to decode data received from the Minecraft process
## Use "system" for your current locale.
## default: system on Linux, latin-1 on Windows
#decode = system
## The encoding used when reading/writing configuration files such as
## the server.properties
## default: latin-1
#fileEncoding = latin-1


## Command line customization.
## Available variables
## - {MULTICRAFT_DIR}   The Multicraft daemon base directory
## - {BASE_DIR}         Same as {MULTICRAFT_DIR}
## - {DAEMON_DIR}       Directory of the daemon binaries
## - {DATA_DIR}         Global.daemon.dataDir
## - {JAR_DIR}          Daemon JAR directory
## - {SERVERS_DIR}      Directory containing all servers
## - {SERVER_ID}        Current server ID
## - {SERVER_DIR}       Current server base directory
## - {SERVER_DIRNAME}   The name of the server base directory
## - {WORLD}            Name of the current world
## - {JAVA}             Java executable to run
## - {START_MEMORY}     Startup memory amount
## - {MAX_MEMORY}       Maximum memory amount
## - {JAR_FILE}         Current JAR file name
## - {JAR}              Full path to current JAR file
## - {IP}               Server IP
## - {PORT}             Server port
## - {MAX_PLAYERS}      Maximum player slots
## - {DAEMON_ID}        Daemon ID
## - {PID}              Process ID of the server process
## - {PID_FILE}         File containing the PID of the server process
## - {USER}             User the server will run as
## - {GROUP}            Group the server will run as
## - {UID}              User system ID
## - {GID}              Group system ID
## - {PARAMS}           See below (also, {PARAMS1} to {PARAMS5})
## - {WORKING_DIR}      Server working directory
[start]
command = "{JAVA}" -Xmx{MAX_MEMORY}M -Xms{START_MEMORY}M -Djline.terminal=jline.UnsupportedTerminal -jar "{JAR}" nogui

## The sections [params], [params1] to [params4] define additional command
## line parameters that can be enabled/disabled in the panel.
## Each section replaces one of the {PARAMS} variables in the command line.
## Example:
##  [params]
##  param1 = -a
##  info1 = Parameter A
##  param2 = --b Test
##
## This defines two optional parameters. The information text is optional.
## If both of them are enabled then {PARAMS} in the command line will be
## replaced by: "-a" "--b Test".
## Up to 20 parameters can be defined per section.
## Up to 5 additional sections can be defined:
##  [params1]
##  [params2]
##  ...
##  [params5]


## The following settings control various aspects of the server such as launch
## method, log rotation, crash detection, etc. The settings are shown with
## their default values.
[settings]
## Restart the server when it doesn't respond to pings anymore
#restartOnTimeout = True
## The server log file
#logFile = server.log
## Ignore console output and parse log file instead
#followLog = False
## Only used if followLog is true, the interval in milliseconds at
## which to check the log file for new content
#logCheckInterval = 500
## Rotate the log every X bytes
#logRotateSize =
## Use special method to rotate log, use this if normal rename rotation doesn't
## work
#logPersistent = False
## Maximum number of logs to keep
#logBackupCount = 5
## Advanced: Read at most X bytes from the file at a time
#logMaxRead = 4096
## Check every X milliseconds if the log needs to be rotated
#logRotateCheckInterval = 20000
## Print every line received from the server
#debugRawLine = False
## Print every line after cleanup
#debugCleanLine = False
## Print every line after the first parse pass
#debugParseLine = False
## Use the Multicraft launcher to wrap the gameserver (simulates a real command
## line)
#useLauncher = False
## Assume Minecraft is still running override (0: Known console output,
## 1: "List" command output, 2: Any console output)
#pongMode = 0
## Minecraft response timeout override (milliseconds)
#pingTimeout = 20000
## Minecraft pint interval override (milliseconds)
#pingInterval = 15000
## Minecraft crash restart delay override (milliseconds)
#crashRestartDelay = 2000
## Console output rate limit override
#rateLimit = 30
## Autosave interval override (milliseconds)
#saveInterval = 600000
## Player info save method override (0: Never Save, 1: Update Existing,
## 2: Always Save)
#savePlayerInfo = 1
## Print server setting information
#debugSettings = False
## Restart the server after a crash or unexpected exit
#restartOnCrash = False
## Print line parser information
#debugParse = False
## The base directory for FTP users
#userBaseDir =
## Whether to copy the JAR file from the daemon jar directory if the server
## uses a different jar directory and the JAR file does not exist
#copyJar = True
## The command to run when a world save is detected
#worldSavedCommand = say ยง8World saved.
## Print the new config file after enforcing the settings
#debugForceConfig = False
## The command to send regularly to check if the server is still up
#pingCommand = list
## The name of the template to suggest to the user when selecting this JAR
#suggestTemplate =
## In case this server does not accept any console commands, set this to true
## to avoid overflowing the input buffer.
#nonInteractiveConsole = false
## The working directory for this server. Must be inside of the server directory
#workingDirectory =

## Plugin configuration
[plugins]
## The directory name within the server directory where plugins reside
## default: plugins
#pluginDir = plugins
## The regex used to match plugin files
## default: \.(jar|zip)$
#pluginMatch = \.(jar|zip)$

## This section configures how the main server config file is adapted to enforce
## certain server settings
[force_config]
## The name of the main config file
#configFile = server.properties
## The newline character to use when saving the config file
#newline = \n
## Up to 20 search and replace settings can be specified. The "searchX" setting
## is a regular expression that is looked for in the config file. If it is found
## it is replaced by the same "replaceX" setting. If "searchX" is not found the
## "replaceX" string is appended to the config file.
## The variables that can be used are the same as for the "command" setting
## in the [start] section.
## The following are the default settings used:
#search1 = server-ip
#replace1 = server-ip={IP}
#search2 = server-port
#replace2 = server-port={PORT}
#search3 = max-players
#replace3 = max-players={MAX_PLAYERS}
#search4 = level-name
#replace4 = level-name={WORLD}
## search5/replace5 to search20/replace20 are empty by default

## Command remapping. If the server uses different commands than the default
## Minecraft server this can be used to send a different command. For example:
## list = status
## This would cause the command "status" to be sent whenever the daemon wants
## to send the "list" command
[commands]
#say = say
#list = list
#save-on = save-on
#save-off = save-off
#save-all = save-all
#stop = stop
#tell = tell
#give = give
#tp = tp
#deop = deop
#op = op
#pardon-ip = pardon-ip
#ban-ip = ban-ip
#pardon = pardon
#ban = ban
#kick = kick
#help = help


## Console output parsing can be completely customized to support
## any format (and theoretically any game). Please see the Multicraft website
## for more details:
## http://www.multicraft.org/site/docs?view=conf

[parse_unknown]
start = (^Unknown console command|Run the command /fml confirm)

[parse_log]
start=^(?P<time>(:?[-\d]+ )?\[?[:\w. -]+\]?)\s+\[?(?P<type>[^]<>]+)[\]>]\:?\s+(:?\[[\w\.-]+[^]]+\]\:?\s+)?(?P<line>.*)$

[parse_connect]
start=(?P<name>.+?)\s*\[[\w.-]*/(?P<ip>[^\]]*)(:?:(?P<port>[0-9]+)?)\]\s*logged in

[parse_clean]
start=(^[>\r\s]+|\x1b(\[|\])[0-9;]*\w?|[\x00-\x1f])

[parse_unknown]
start=^(Run the|Unknown console) command
